# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-04-13 16:40
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('photologue', '0012_auto_20160413_1640'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('text', models.TextField(verbose_name='Text')),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Published')], default=2, help_text='With Draft chosen, will only be shown for admin users on the site.', verbose_name='Status')),
                ('publish_date', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, help_text="With Published chosen, won't be shown until this time", null=True, verbose_name='Published from')),
                ('expiry_date', models.DateTimeField(blank=True, help_text="With Published chosen, won't be shown after this time", null=True, verbose_name='Expires on')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Allow comments')),
                ('shared', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-publish_date',),
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=300, null=True, verbose_name='URL')),
                ('tagline', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tagline')),
                ('custom_html', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Custom HTML')),
                ('analytics_code', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Analytics code')),
                ('template', models.CharField(choices=[(b'one-page-wonder.css', 'One page wonder'), (b'minimalist-blog.css', 'Minimalist')], default=b'one-page-wonder.css', max_length=200, verbose_name='Template')),
                ('license', models.CharField(choices=[(b'cc-by-sa', 'CC-BY-SA'), (b'copyright', 'Copyright')], default=b'cc-by-sa', max_length=200, verbose_name='License')),
                ('header_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='photologue.Photo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nick name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('url', models.CharField(blank=True, max_length=300, null=True, verbose_name='Url')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('status', models.IntegerField(choices=[(1, 'Visible'), (2, 'Visible only for the admin'), (3, 'Not visible')], default=1, verbose_name='Status')),
                ('publish_date', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Publish date')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='base.Article')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'ordering': ('-publish_date',),
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Blog'),
        ),
        migrations.AddField(
            model_name='article',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='blogposts', to='base.Category', verbose_name='Categories'),
        ),
        migrations.AddField(
            model_name='article',
            name='featured_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='photologue.Photo', verbose_name='Featured Image'),
        ),
        migrations.AddField(
            model_name='article',
            name='related_posts',
            field=models.ManyToManyField(blank=True, related_name='_article_related_posts_+', to='base.Article', verbose_name='Related posts'),
        ),
    ]
